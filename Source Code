from tkinter import * 
from pytube import YouTube 
from PIL import ImageTk, Image  
import webbrowser
from tkinter import messagebox
import os
import tkinter as tkk
from tkinter import ttk
import tkinter as tk

root = Tk()
root.geometry ('640x600') # Size of the window
root.resizable(0, 0) # makes the window adjustable with its features
root.configure(bg="#1f242b")
root.iconbitmap("Textures\icon.ico")

def openyoutube():
    webbrowser.open ("https://www.youtube.com")

def videos():
    path = "Downloaded Videos"
    path = os.path.realpath(path)
    os.startfile(path)

def audios():
    path = "Downloaded Audios"
    path = os.path.realpath(path)
    os.startfile(path)

def about():
    ab = Tk()
    ab.geometry("200x100")
    ab.configure(bg="#1f242b")
    ab.iconbitmap("Textures\icon.ico")
    ab.title("About")
    
    Label(ab, text = "",bg="#1f242b", foreground="white").pack()
    Label(ab, text="Yt Downloader", font='san-serif 14 bold' ,bg="#1f242b", foreground="white").pack()
    Label(ab, text="Version : 1.0.1", font='san-serif 10 bold' ,bg="#1f242b", foreground="white").pack()

menubar = Menu(root, background="#16191f", foreground="white")
root.config(menu=menubar)

# create a menu
file_menu = Menu(menubar)

# add a menu item to the menu
file_menu.add_command(
    label='Downloaded Videos Folder',
    command=videos
)

file_menu.add_command(
    label='Downloaded Audios Folder',
    command=audios
)

file_menu.add_command(
    label='Open Youtube',
    command=openyoutube
)
file_menu.add_command(
    label='About',
    command=about
)

file_menu.add_command(
    label='Exit',
    command=root.destroy
)

# add the File menu to the menubar
menubar.add_cascade(
    label="Menu",
    menu=file_menu
)

root.title('YT Video Downloader (Made by Ahmed Barakat)')

Label(root, text="" ,bg="#1f242b").pack()
Label(root, text="" ,bg="#1f242b").pack()

img = Image.open('Textures\youtube.png')
img = img.resize((75, 70), Image.ANTIALIAS)    
img = ImageTk.PhotoImage(img)
panel = Label(root, image=img ,bg="#1f242b")
panel.image = img
panel.pack(side = "top", expand = "no")

Label(root, text="" ,bg="#1f242b").pack()

Label(root, text="Download Youtube videos", font='san-serif 14 bold' ,bg="#1f242b", foreground="white").pack()
link = StringVar() # Specifying the variable type

Label(root, text="" ,bg="#1f242b").pack()
Label(root, text="" ,bg="#1f242b").pack()

Label(root, text="Paste your link here", font='san-serif 15 bold' ,bg="#1f242b", foreground="white").pack()

Label(root, text="" ,bg="#1f242b").pack()
Label(root, text="" ,bg="#1f242b").pack()

class EntryEx(Entry):
    """
    Extended entry widget that includes a context menu
    with Copy, Cut and Paste commands.
    """

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.menu = tkk.Menu(self, tearoff=False)
        self.menu.add_command(label="Copy", command=self.popup_copy)
        self.menu.add_command(label="Cut", command=self.popup_cut)
        self.menu.add_separator()
        self.menu.add_command(label="Paste", command=self.popup_paste)
        self.bind("<Button-3>", self.display_popup)

    def display_popup(self, event):
        self.menu.post(event.x_root, event.y_root)

    def popup_copy(self):
        self.event_generate("<<Copy>>")

    def popup_cut(self):
        self.event_generate("<<Cut>>")

    def popup_paste(self):
        self.event_generate("<<Paste>>")


link_enter = EntryEx(root, width=70, textvariable=link).pack()

Label(root, text="" ,bg="#1f242b").pack()
Label(root, text="First, Choose Reasolution", font='san-serif 12 bold' ,bg="#1f242b", foreground="white").pack()

reschoosen2 = ["144p","240p","360p","480p","720p"]

n = tk.StringVar()
reschoosen = ttk.Combobox(root, width = 27,values=reschoosen2, textvariable = n).pack()

def download():
    msg = messagebox.showwarning( "Alert", "Are you Sure You That the url is Correct")
    try: 
        url = YouTube(str(link.get())) #This captures the link(url) and locates it from YouTube.
    except: 
        msg = messagebox.showerror( "ERROR!!!!", "Connection Error")
    video = url.streams.filter(res= n.get()).first()
    try:
       out_file = video.download("Downloaded Videos")
       base, ext = os.path.splitext(out_file)
       new_file = base + '.mp4'
       os.rename(out_file, new_file)
       msg = messagebox.showinfo( "Alert", "Downloaded Go Check Download Folder")
    except:
        msg = messagebox.showerror( "ERROR!!!!", "Something Wrong happened")

def download1():
    msg = messagebox.showwarning( "Alert", "Are you Sure You That the url is Correct")
    try: 
        url = YouTube(str(link.get())) #This captures the link(url) and locates it from YouTube.
    except: 
        msg = messagebox.showerror( "ERROR!!!!", "Connection Error")
    video = url.streams.filter(only_audio=True).first()
    try:
       out_file = video.download("Downloaded Audios")
       base, ext = os.path.splitext(out_file)
       new_file = base + '.mp3'
       os.rename(out_file, new_file) 
       msg = messagebox.showinfo( "Alert", "Downloaded Go Check Download Folder")
    except:
        msg = messagebox.showerror( "ERROR!!!!", "Something Wrong happened")

    

Label(root, text="" ,bg="#1f242b").pack()
Label(root, text="" ,bg="#1f242b").pack()

Button(root, text='Download as a Video', font='san-serif 16 bold', bg='red', padx=2,command= download).pack()
Button(root, text='Download as a Audio', font='san-serif 16 bold', bg='red', padx=2,command= download1).pack()


Label(root, text="" ,bg="#1f242b").pack()

Label(root, text="(Made by Ahmed Barakat)" ,bg="#1f242b", foreground="white").pack()

def github():
    webbrowser.open ("https://github.com/ahmedbarakat2007")

Button(root, text='Github', font='san-serif 16 bold', bg='purple',command= github).pack()

root.mainloop()